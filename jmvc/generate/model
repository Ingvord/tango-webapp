load('jmvc/generate/loader.js');

if(!arguments[0]){
	print("USAGE: js jmvc/generate/model name type[optional] app_name[optional]");
	print("name := under_scoped_name");
	print("type := " + MVC.gModelTypes.join('|'));
	print("app_name := under_scoped_name. If present newly created model will be added to the application\n");
	print();
	exit(127);
}

var attachToApp = typeof arguments[2] != 'undefined';
var app;
var app_path = '';

if(arguments.length == 1 || (arguments.length == 2 && MVC.Array.include(MVC.gModelTypes,arguments[1]))){
	app = {models:[],tests:{unit:[]}};
} else {
	if(arguments.length == 2){
		app = load_app(arguments[1]);
		arguments[1] = undefined;
		arguments[2] = app.name;
	} else {
		app = load_app(arguments[2]);
	}
	app_path += app.name + '/';
}

var data = {
    name      : arguments[0],
	class_name: MVC.String.classize(arguments[0]),
	type      : MVC.String.classize((arguments[1]) ? arguments[1]: "model")
}

v = new View({absolute_url: "jmvc/rhino/command/templates/model.ejs"});
MVCOptions.save("models/"+app_path+data.name+".js",  v.render(data)  );
app.models.push(app_path+data.name);
print("Generating ... models/"+app_path+data.name+".js");

t = new View({absolute_url: "jmvc/rhino/command/templates/unit_test.ejs"});
MVCOptions.save("test/unit/"+app_path+data.name+"_test.js",  t.render(data)  );
app.tests.unit.push(app_path+data.name);

print("               test/unit/"+app_path+data.name+"_test.js");

if(attachToApp){
	save_app(app);
}

print("\n               Done!\n");
if(!attachToApp){
print("\n               Make sure to add to your application files!\n");
}